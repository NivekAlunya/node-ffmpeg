var fs = require('fs')
,path = require('path')
;
exports = module.exports = {
  getFilesFromDirectory: function(path2files, pattern, callback) {
    path2files = path.normalize(path2files + '/');
    if (!path2files) callback(new Error('No path defined...'), null);
    fs.readdir(path2files, function(err, pfiles) {
      if(err) {
        callback(err, null);
        return;
      }

      var files2process = [];

      function _stat(files) {
        var file = files.shift();
        var fullfilename = path.normalize(path2files + file);
        fs.stat(fullfilename, function(err, stats){
          if(err) {
            console.log('stat for ' + file);
            console.log(err);
            return;
          }
          if (stats.isFile() && file[0] != '.') files2process.push(fullfilename);

          if (files.length > 0) {
            _stat(files);
          } else {
            callback(null, files2process);
          }

        });
      }
      _stat(pfiles);
    });
  }
  ,filesExist: function(files, callback) {
    var result = new Array(files.length);
    var index = 0, trues = [], falses = [];
    var _files = files.copy();
    function _exists() {
      if(_files.length <= 0) {
        callback(trues, falses);
        return;
      }
      fs.access(_files.shift(), fs.R_OK, (err) => {
        if (err) {
          falses.push(index);
        } else {
          trues.push(index);
        }
        ++index;
        _exists();
      });
    }
    _exists();
  }
}

Array.prototype.copy = function() {
  var out = new Array(this.length);
  var i = out.length;
  while(i--) { out[i] = this[i]; }
  return out;
}
